name: Build and Release Go Binary

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

permissions:
  contents: write # Allow writing releases

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build for multiple platforms
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude unsupported combinations
          - goos: windows
            goarch: arm64

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21' # Use the appropriate Go version
        cache: false

    - name: Get dependencies
      run: |
        go mod download
        go mod verify

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        OUTPUT_NAME=${{ github.event.repository.name }}-${{ matrix.goos }}-${{matrix.goarch }}
        if [ "${{ matrix.goos }}" == "windows" ]; then
          OUTPUT_NAME+=".exe"
        fi
        go build -v -o dist/$OUTPUT_NAME \
          -ldflags="-s -w \
          -X 'main.Version=${{ github.ref_name }}' \
          -X 'main.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')' \
          -X 'main.Commit=${{ github.sha }}'"

    - name: Create checksum
      working-directory: dist
      run: |
        sha256sum ${{ github.event.repository.name }}-${{ matrix.goos }}-${{matrix.goarch }}* > ${{ github.event.repository.name }}-${{ matrix.goos }}-${{matrix.goarch }}-checksums.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.goos }}-${{matrix.goarch }}
        path: |
          dist/${{ github.event.repository.name }}-${{ matrix.goos }}-${{matrix.goarch }}*
    - name: Trigger Workflow
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: vhs
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Generate release notes
      run: |
        # You can customize this to generate more detailed release notes
        echo "## Changelog" > release_notes.md
        echo "- Automated release of version ${{ github.ref_name }}" >> release_notes.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/**/${{ github.event.repository.name }}-*
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') }}
  vhs:
    needs: [build, release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download jujuid
        run: |
          gh release download --repo jzandbergen/jujuid --pattern 'jujuid-linux-amd64' --dir /tmp
          chmod +x /tmp/jujuid-linux-amd64
          sudo mv /tmp/jujuid-linux-amd64 /usr/local/bin/jujuid
        env:
          GH_TOKEN: ${{ github.token }}
      - uses: charmbracelet/vhs-action@v2
        with:
          path: 'assets/demo.tape'
      - uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit_message: 'docs(vhs): update demo.gif'
          branch: main
          commit_user_name: vhs-action ðŸ“¼
          commit_user_email: actions@github.com
          commit_author: vhs-action ðŸ“¼ <actions@github.com>
          file_pattern: '*.gif'
